import React, { useState } from 'react';
import {
  View, Text, StyleSheet, TouchableOpacity, ScrollView,
  StatusBar, Platform
} from 'react-native';
import { SafeAreaView } from 'react-native-safe-area-context';
import { usePatientContext } from '../context/PatientContext';
import { useNavigation } from '@react-navigation/native';
import * as Animatable from 'react-native-animatable';
import useBackButtonExitHandler from '../hooks/useBackButtonExitHandler';

const priorityOptions = [
  { 
    title: 'Priority 1',
    description: '‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏†‡∏≤‡∏ß‡∏∞‡∏ß‡∏¥‡∏Å‡∏§‡∏ï ‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì‡∏ä‡∏µ‡∏û‡πÑ‡∏°‡πà‡∏Ñ‡∏á‡∏ó‡∏µ‡πà ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏ù‡πâ‡∏≤‡∏£‡∏∞‡∏ß‡∏±‡∏á‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î‡πÉ‡∏ô ICU ‡∏ã‡∏∂‡πà‡∏á‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏£‡∏∞‡∏ó‡∏≥‡πÑ‡∏î‡πâ‡∏ó‡∏µ‡πà‡∏ô‡∏≠‡∏Å‡∏´‡∏≠‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏´‡∏ô‡∏±‡∏Å (ICU) ‡πÄ‡∏ä‡πà‡∏ô ‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏†‡∏≤‡∏ß‡∏∞‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ä‡πà‡∏ß‡∏¢‡∏´‡∏≤‡∏¢‡πÉ‡∏à/‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ü‡∏≠‡∏Å‡πÑ‡∏ï/‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏õ‡∏≠‡∏î‡∏´‡∏±‡∏ß‡πÉ‡∏à‡πÄ‡∏ó‡∏µ‡∏¢‡∏°, ‡∏Å‡∏≤‡∏£‡πÑ‡∏î‡πâ‡∏¢‡∏≤‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô‡∏Ñ‡∏ß‡∏≤‡∏°‡∏î‡∏±‡∏ô‡πÇ‡∏•‡∏´‡∏¥‡∏ï/‡∏¢‡∏≤‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô‡∏´‡∏±‡∏ß‡πÉ‡∏à ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏ô ‡πÅ‡∏•‡∏∞ ‡∏°‡∏µ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏£‡∏≠‡∏î‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï >50% (SOFA ‚â§12 ‡∏´‡∏£‡∏∑‡∏≠ APACHE II ‚â§19)', 
    value: '4',
    icon: 'üî¥' 
  },
  { 
    title: 'Priority 2',
    description: '‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏ù‡πâ‡∏≤‡∏£‡∏∞‡∏ß‡∏±‡∏á ‡πÅ‡∏•‡∏∞ ‡∏ï‡∏£‡∏ß‡∏à‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÉ‡∏Å‡∏•‡πâ‡∏ä‡∏¥‡∏î ‡πÄ‡∏ä‡πà‡∏ô ‡πÄ‡∏™‡∏µ‡πà‡∏¢‡∏á‡∏ï‡πà‡∏≠‡∏†‡∏≤‡∏ß‡∏∞‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏à‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÉ‡∏™‡πà‡∏ó‡πà‡∏≠‡∏ä‡πà‡∏ß‡∏¢‡∏´‡∏≤‡∏¢‡πÉ‡∏à ‡πÄ‡∏ä‡πà‡∏ô ‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏°‡∏µ‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏°‡∏≤‡∏Å ‡∏ã‡∏∂‡πà‡∏á‡∏≠‡∏≤‡∏à‡πÄ‡∏Å‡∏¥‡∏î‡∏≠‡∏≤‡∏Å‡∏≤‡∏£ ‡∏´‡∏£‡∏∑‡∏≠ ‡πÄ‡∏Å‡∏¥‡∏î‡∏†‡∏≤‡∏ß‡∏∞ ‡πÅ‡∏ó‡∏£‡∏Å‡∏ã‡πâ‡∏≠‡∏ô‡πÉ‡∏ô‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ô‡∏≠‡∏ô‡∏£‡∏û. ‡∏´‡∏£‡∏∑‡∏≠ post-op major operation ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£ intensive monitoring', 
    value: '3',
    icon: 'üü†'
  },
  { 
    title: 'Priority 3',
    description: '‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏†‡∏≤‡∏ß‡∏∞‡∏ß‡∏¥‡∏Å‡∏§‡∏ï ‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡πÄ‡∏ù‡πâ‡∏≤‡∏£‡∏∞‡∏ß‡∏±‡∏á ‡πÅ‡∏ï‡πà‡∏°‡∏µ ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™ ‡∏´‡∏≤‡∏¢‡∏à‡∏≤‡∏Å‡πÇ‡∏£‡∏Ñ ‡∏´‡∏£‡∏∑‡∏≠ ‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏î‡∏µ‡∏Ç‡∏∂‡πâ‡∏ô‡∏¢‡∏≤‡∏Å ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ï‡∏±‡∏ß‡πÇ‡∏£‡∏Ñ‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏°‡∏≤‡∏Å ‡∏´‡∏£‡∏∑‡∏≠ ‡∏°‡∏µ‡πÇ‡∏£‡∏Ñ‡∏õ‡∏£‡∏∞‡∏à‡∏≥‡∏ï‡∏±‡∏ß‡∏°‡∏≤‡∏Å ‡∏°‡∏µ‡∏≠‡∏ß‡∏±‡∏¢‡∏ß‡∏∞‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß‡∏´‡∏•‡∏≤‡∏¢‡∏£‡∏∞‡∏ö‡∏ö ‡πÇ‡∏≠‡∏Å‡∏≤‡∏™‡∏£‡∏≠‡∏î‡∏ä‡∏µ‡∏ß‡∏¥‡∏ï <50% (SOFA >12 ‡∏´‡∏£‡∏∑‡∏≠ APACHE II >19)', 
    value: '2',
    icon: 'üü°'
  },
  { 
    title: 'Priority 4',
    description: '‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏≠‡∏≤‡∏Å‡∏≤‡∏£‡∏Ñ‡∏á‡∏ó‡∏µ‡πà ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô‡πÉ‡∏ô ICU ‡πÄ‡∏ä‡πà‡∏ô ‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡πÇ‡∏£‡∏Ñ‡∏°‡∏∞‡πÄ‡∏£‡πá‡∏á‡πÉ‡∏ô‡∏£‡∏∞‡∏¢‡∏∞‡πÅ‡∏û‡∏£‡πà‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡πÄ‡∏ä‡∏∑‡πâ‡∏≠‡πÉ‡∏ô‡∏Å‡∏£‡∏∞‡πÅ‡∏™‡πÄ‡∏•‡∏∑‡∏≠‡∏î ‡∏´‡∏£‡∏∑‡∏≠ ‡∏†‡∏≤‡∏ß‡∏∞‡∏´‡∏≤‡∏¢‡πÉ‡∏à‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß, ‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏õ‡∏£‡∏∞‡∏Ñ‡∏±‡∏ö‡∏õ‡∏£‡∏∞‡∏Ñ‡∏≠‡∏á (Palliative care, NR, Hopeless)', 
    value: '0',
    icon: 'üü¢'
  },
];

const PatientPriorityScreen = () => {
  const { updatePatientData } = usePatientContext();
  const navigation = useNavigation();
  useBackButtonExitHandler();
  const [priority, setPriority] = useState('');

  const handleNext = () => {
    updatePatientData({
        priority: { rehScore: parseInt(priority || 0, 10) }
    });
    navigation.navigate('PatientCCI');
  };

  return (
    <SafeAreaView style={styles.safeArea}>
      <StatusBar barStyle="dark-content" backgroundColor="#F4F7F6" />
      <View style={styles.header}>
        <TouchableOpacity onPress={() => navigation.goBack()} style={styles.backButton}>
          <Text style={styles.backButtonText}>‚Äπ</Text>
        </TouchableOpacity>
        <Text style={styles.headerTitle}>Patient Priority</Text>
        <View style={styles.totalScoreCircle}>
          <Text style={styles.totalScoreLabel}>REH</Text>
          <Text style={styles.totalScoreValue}>{priority || '0'}</Text>
        </View>
      </View>

      <ScrollView contentContainerStyle={styles.container}>
        <Animatable.Text animation="fadeIn" duration={600} style={styles.screenDescription}>
          ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πà‡∏á‡∏î‡πà‡∏ß‡∏ô‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢‡∏ï‡∏≤‡∏°‡πÄ‡∏Å‡∏ì‡∏ë‡πå‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
        </Animatable.Text>
        
        {priorityOptions.map((option, index) => (
          <Animatable.View key={option.value} animation="fadeInUp" duration={500} delay={index * 100}>
            <TouchableOpacity
              style={[
                styles.optionCard,
                priority === option.value && styles.selectedOptionCard
              ]}
              onPress={() => setPriority(option.value)}
            >
              <Text style={styles.optionIcon}>{option.icon}</Text>
              <View style={styles.optionTextContainer}>
                <Text style={[styles.optionTitle, priority === option.value && styles.selectedOptionText]}>{option.title}</Text>
                <Text style={[styles.optionDescription, priority === option.value && styles.selectedOptionText]}>{option.description}</Text>
              </View>
              <View style={[styles.radioCircle, priority === option.value && styles.radioCircleSelected]}>
                {priority === option.value && <View style={styles.radioInnerCircle} />}
              </View>
            </TouchableOpacity>
          </Animatable.View>
        ))}
      </ScrollView>

      <Animatable.View animation="slideInUp" duration={500} style={styles.footer}>
        <TouchableOpacity 
          style={[styles.nextButton, !priority && styles.nextButtonDisabled]} 
          onPress={handleNext}
          disabled={!priority}
        >
          <Text style={styles.nextButtonText}>‡∏ï‡πà‡∏≠‡πÑ‡∏õ (Next)</Text>
        </TouchableOpacity>
      </Animatable.View>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  safeArea: { flex: 1, backgroundColor: '#F4F7F6' },
  container: { paddingHorizontal: 20, paddingBottom: 120, paddingTop: 10 },
  header: { flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', paddingVertical: 12, paddingHorizontal: 20, backgroundColor: '#F4F7F6' },
  backButton: { width: 44, height: 44, borderRadius: 22, backgroundColor: '#FFFFFF', justifyContent: 'center', alignItems: 'center', shadowColor: '#000', shadowOffset: { width: 0, height: 1 }, shadowOpacity: 0.1, shadowRadius: 2, elevation: 3 },
  backButtonText: { fontSize: 24, color: '#0B6258', fontFamily: 'IBMPlexSansThai-Bold' },
  headerTitle: { fontFamily: 'IBMPlexSansThai-Bold', fontSize: 22, color: '#0B6258' },
  totalScoreCircle: { width: 60, height: 60, borderRadius: 30, backgroundColor: '#0B6258', justifyContent: 'center', alignItems: 'center', elevation: 5, shadowColor: '#0B6258', shadowOffset: { width: 0, height: 4 }, shadowOpacity: 0.3, shadowRadius: 4 },
  totalScoreLabel: { fontFamily: 'IBMPlexSans-Regular', fontSize: 12, color: '#FFFFFF', opacity: 0.8 },
  totalScoreValue: { fontFamily: 'IBMPlexSans-Bold', fontSize: 22, color: '#FFFFFF' },
  screenDescription: {
    fontFamily: 'IBMPlexSansThai-Regular',
    fontSize: 16,
    color: '#2C3E50',
    textAlign: 'center',
    marginBottom: 24,
  },
  optionCard: {
    flexDirection: 'row',
    alignItems: 'center',
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    padding: 16,
    marginBottom: 12,
    borderWidth: 2,
    borderColor: '#E0E6EB',
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 1 },
    shadowOpacity: 0.05,
    shadowRadius: 3,
    elevation: 2,
  },
  selectedOptionCard: {
    borderColor: '#0B6258',
    backgroundColor: '#EAF7F5',
  },
  optionIcon: {
    fontSize: 24,
    marginRight: 16,
  },
  optionTextContainer: {
    flex: 1,
  },
  optionTitle: {
    fontFamily: 'IBMPlexSansThai-Bold',
    fontSize: 16,
    color: '#2C3E50',
  },
  optionDescription: {
    fontFamily: 'IBMPlexSansThai-Regular',
    fontSize: 14,
    color: '#7F8C8D',
    marginTop: 4,
  },
  selectedOptionText: {
    color: '#0B6258',
    fontFamily: 'IBMPlexSansThai-Bold',
  },
  radioCircle: {
    width: 24,
    height: 24,
    borderRadius: 12,
    borderWidth: 2,
    borderColor: '#E0E6EB',
    justifyContent: 'center',
    alignItems: 'center',
    marginLeft: 16,
  },
  radioCircleSelected: {
    borderColor: '#0B6258',
  },
  radioInnerCircle: {
    width: 12,
    height: 12,
    borderRadius: 6,
    backgroundColor: '#0B6258',
  },
  footer: { position: 'absolute', bottom: 0, left: 0, right: 0, padding: 20, paddingBottom: Platform.OS === 'ios' ? 30 : 20, backgroundColor: '#FFFFFF', borderTopWidth: 1, borderTopColor: '#E0E6EB' },
  nextButton: { backgroundColor: '#0B6258', borderRadius: 12, paddingVertical: 16, alignItems: 'center', shadowColor: '#0B6258', shadowOffset: { width: 0, height: 4 }, shadowOpacity: 0.3, shadowRadius: 8, elevation: 5 },
  nextButtonDisabled: { backgroundColor: '#B2DFD5', elevation: 0 },
  nextButtonText: { color: 'white', fontSize: 18, fontFamily: 'IBMPlexSansThai-Bold' },
});

export default PatientPriorityScreen;